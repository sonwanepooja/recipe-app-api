import '../polyfills';
import { ClerkProvider as ClerkReactProvider } from '@clerk/clerk-react';
import type { Without } from '@clerk/types';
import type { TokenCache } from '../cache/types';
import type { BuildClerkOptions } from './singleton/types';
export type ClerkProviderProps = Without<React.ComponentProps<typeof ClerkReactProvider>, 'publishableKey'> & {
    /**
     * Used to override the default EXPO_PUBLIC_CLERK_PUBLISHABLE_KEY env variable if needed.
     * This is optional for Expo as the ClerkProvider will automatically use the EXPO_PUBLIC_CLERK_PUBLISHABLE_KEY env variable if it exists.
     */
    publishableKey?: string;
    /**
     * The token cache is used to persist the active user's session token. Clerk stores this token in memory by default, however it is recommended to use a token cache for production applications.
     * @see https://clerk.com/docs/quickstarts/expo#configure-the-token-cache-with-expo
     */
    tokenCache?: TokenCache;
    /**
     * Note: Passkey support in Expo is currently in a limited rollout phase.
     * If you're interested in using this feature, please contact us for early access or additional details.
     * This API is experimental and may change at any moment.
     * @experimental
     */
    __experimental_passkeys?: BuildClerkOptions['__experimental_passkeys'];
    /**
     * This cache is used to store the resources that Clerk fetches from the server when the network is offline.
     *
     * @experimental This API is experimental and may change at any moment.
     */
    __experimental_resourceCache?: BuildClerkOptions['__experimental_resourceCache'];
};
export declare function ClerkProvider(props: ClerkProviderProps): JSX.Element;
//# sourceMappingURL=ClerkProvider.d.ts.map