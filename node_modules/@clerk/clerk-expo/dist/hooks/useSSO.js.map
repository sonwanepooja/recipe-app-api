{"version":3,"sources":["../../src/hooks/useSSO.ts"],"sourcesContent":["import { useSignIn, useSignUp } from '@clerk/clerk-react';\nimport type { EnterpriseSSOStrategy, OAuthStrategy, SetActive, SignInResource, SignUpResource } from '@clerk/types';\nimport * as AuthSession from 'expo-auth-session';\nimport * as WebBrowser from 'expo-web-browser';\n\nimport { errorThrower } from '../utils/errors';\n\nexport type StartSSOFlowParams = {\n  redirectUrl?: string;\n  unsafeMetadata?: SignUpUnsafeMetadata;\n} & (\n  | {\n      strategy: OAuthStrategy;\n    }\n  | {\n      strategy: EnterpriseSSOStrategy;\n      identifier: string;\n    }\n);\n\nexport type StartSSOFlowReturnType = {\n  createdSessionId: string | null;\n  authSessionResult: WebBrowser.WebBrowserAuthSessionResult | null;\n  setActive?: SetActive;\n  signIn?: SignInResource;\n  signUp?: SignUpResource;\n};\n\nexport function useSSO() {\n  const { signIn, setActive, isLoaded: isSignInLoaded } = useSignIn();\n  const { signUp, isLoaded: isSignUpLoaded } = useSignUp();\n\n  async function startSSOFlow(startSSOFlowParams: StartSSOFlowParams): Promise<StartSSOFlowReturnType> {\n    if (!isSignInLoaded || !isSignUpLoaded) {\n      return {\n        createdSessionId: null,\n        authSessionResult: null,\n        signIn,\n        signUp,\n        setActive,\n      };\n    }\n\n    const { strategy, unsafeMetadata } = startSSOFlowParams ?? {};\n\n    /**\n     * Creates a redirect URL based on the application platform\n     * It must be whitelisted, either via Clerk Dashboard, or BAPI, in order\n     * to include the `rotating_token_nonce` on SSO callback\n     * @ref https://clerk.com/docs/reference/backend-api/tag/Redirect-URLs#operation/CreateRedirectURL\n     */\n    const redirectUrl =\n      startSSOFlowParams.redirectUrl ??\n      AuthSession.makeRedirectUri({\n        path: 'sso-callback',\n      });\n\n    await signIn.create({\n      strategy,\n      redirectUrl,\n      ...(startSSOFlowParams.strategy === 'enterprise_sso' ? { identifier: startSSOFlowParams.identifier } : {}),\n    });\n\n    const { externalVerificationRedirectURL } = signIn.firstFactorVerification;\n    if (!externalVerificationRedirectURL) {\n      return errorThrower.throw('Missing external verification redirect URL for SSO flow');\n    }\n\n    const authSessionResult = await WebBrowser.openAuthSessionAsync(\n      externalVerificationRedirectURL.toString(),\n      redirectUrl,\n    );\n    if (authSessionResult.type !== 'success' || !authSessionResult.url) {\n      return {\n        createdSessionId: null,\n        setActive,\n        signIn,\n        signUp,\n        authSessionResult,\n      };\n    }\n\n    const params = new URL(authSessionResult.url).searchParams;\n    const rotatingTokenNonce = params.get('rotating_token_nonce') ?? '';\n    await signIn.reload({ rotatingTokenNonce });\n\n    const userNeedsToBeCreated = signIn.firstFactorVerification.status === 'transferable';\n    if (userNeedsToBeCreated) {\n      await signUp.create({\n        transfer: true,\n        unsafeMetadata,\n      });\n    }\n\n    return {\n      createdSessionId: signUp.createdSessionId ?? signIn.createdSessionId,\n      setActive,\n      signIn,\n      signUp,\n      authSessionResult,\n    };\n  }\n\n  return {\n    startSSOFlow,\n  };\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAqC;AAErC,kBAA6B;AAC7B,iBAA4B;AAE5B,oBAA6B;AAuBtB,SAAS,SAAS;AACvB,QAAM,EAAE,QAAQ,WAAW,UAAU,eAAe,QAAI,8BAAU;AAClE,QAAM,EAAE,QAAQ,UAAU,eAAe,QAAI,8BAAU;AAEvD,iBAAe,aAAa,oBAAyE;AAhCvG;AAiCI,QAAI,CAAC,kBAAkB,CAAC,gBAAgB;AACtC,aAAO;AAAA,QACL,kBAAkB;AAAA,QAClB,mBAAmB;AAAA,QACnB;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,IACF;AAEA,UAAM,EAAE,UAAU,eAAe,IAAI,kDAAsB,CAAC;AAQ5D,UAAM,eACJ,wBAAmB,gBAAnB,YACA,YAAY,gBAAgB;AAAA,MAC1B,MAAM;AAAA,IACR,CAAC;AAEH,UAAM,OAAO,OAAO;AAAA,MAClB;AAAA,MACA;AAAA,MACA,GAAI,mBAAmB,aAAa,mBAAmB,EAAE,YAAY,mBAAmB,WAAW,IAAI,CAAC;AAAA,IAC1G,CAAC;AAED,UAAM,EAAE,gCAAgC,IAAI,OAAO;AACnD,QAAI,CAAC,iCAAiC;AACpC,aAAO,2BAAa,MAAM,yDAAyD;AAAA,IACrF;AAEA,UAAM,oBAAoB,MAAM,WAAW;AAAA,MACzC,gCAAgC,SAAS;AAAA,MACzC;AAAA,IACF;AACA,QAAI,kBAAkB,SAAS,aAAa,CAAC,kBAAkB,KAAK;AAClE,aAAO;AAAA,QACL,kBAAkB;AAAA,QAClB;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,IACF;AAEA,UAAM,SAAS,IAAI,IAAI,kBAAkB,GAAG,EAAE;AAC9C,UAAM,sBAAqB,YAAO,IAAI,sBAAsB,MAAjC,YAAsC;AACjE,UAAM,OAAO,OAAO,EAAE,mBAAmB,CAAC;AAE1C,UAAM,uBAAuB,OAAO,wBAAwB,WAAW;AACvE,QAAI,sBAAsB;AACxB,YAAM,OAAO,OAAO;AAAA,QAClB,UAAU;AAAA,QACV;AAAA,MACF,CAAC;AAAA,IACH;AAEA,WAAO;AAAA,MACL,mBAAkB,YAAO,qBAAP,YAA2B,OAAO;AAAA,MACpD;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,EACF;AAEA,SAAO;AAAA,IACL;AAAA,EACF;AACF;","names":[]}