import type { EnterpriseSSOStrategy, OAuthStrategy, SetActive, SignInResource, SignUpResource } from '@clerk/types';
import * as WebBrowser from 'expo-web-browser';
export type StartSSOFlowParams = {
    redirectUrl?: string;
    unsafeMetadata?: SignUpUnsafeMetadata;
} & ({
    strategy: OAuthStrategy;
} | {
    strategy: EnterpriseSSOStrategy;
    identifier: string;
});
export type StartSSOFlowReturnType = {
    createdSessionId: string | null;
    authSessionResult: WebBrowser.WebBrowserAuthSessionResult | null;
    setActive?: SetActive;
    signIn?: SignInResource;
    signUp?: SignUpResource;
};
export declare function useSSO(): {
    startSSOFlow: (startSSOFlowParams: StartSSOFlowParams) => Promise<StartSSOFlowReturnType>;
};
//# sourceMappingURL=useSSO.d.ts.map